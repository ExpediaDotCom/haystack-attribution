health.status.path = "/app/isHealthy"

aggregate.stats {
  window.sec = 300 // 5 min
  retention.days = 2
  vnodes = 5
}

kafka {
  storename = "haystack-attributor"

  close.timeout.ms = 30000

  streams {
    application.id = "haystack-attributor"
    bootstrap.servers = "localhost:9092"
    num.stream.threads = 4
    request.timeout.ms = 60000
    auto.offset.reset = latest
    replication.factor = 2
    cache.max.bytes.buffering = 41943040
    timestamp.extractor = "com.expedia.www.haystack.commons.kstreams.SpanTimestampExtractor"
  }

  consumer {
    topic = "proto-spans"
  }
}

elasticsearch {
  client {
    endpoint = "http://elasticsearch:9200"
    conn.timeout.ms = 10000
    read.timeout.ms = 5000
  }
  index {
    service.metadata {
      name = "service-metadata"
    }
  }
}

service {
  host = "localhost"
  port = 8080
  idle.timeout.ms = 60000

  threads {
    min = 1
    max = 5
  }

  client {
    connection.timeout.ms = 15000
    socket.timeout.ms = 20000
  }
}

tags.json = """{
  "items": [
    {
      "attributeName": "attribute_name_1",
      "spanTagKeys": [
        "tag_key_1",
        "tag_key_2"
      ],
      "operatorType": "COUNT",
      "defaultValue": "0",
      "valueType": "COUNT"
    },
    {
      "attributeName": "attribute_name_2",
      "spanTagKeys": [
        "tag_key_3",
        "tag_key_4"
      ],
      "operatorType": "SUM",
      "defaultValue": "0",
      "valueType": "BYTES"
    },
    {
      "attributeName": "attribute_name_3",
      "spanTagKeys": [
        "tag_key_5",
        "tag_key_6"
      ],
      "operatorType": "COUNT",
      "defaultValue": "0",
      "valueType": "COUNT",
      "valueWhitelistString": "only_include_me"
    },
    {
      "attributeName": "attribute_name_4",
      "spanTagKeys": [
        "tag_key_7"
      ],
      "operatorType": "BAGGAGE",
      "defaultValue": "default_baggage",
      "valueType": "NONE"
    }
  ]
}"""